image: docker:23.0.3

stages:
  - build
  - push

# This file is a template, and might need editing before it works on your project.
push to docker hub:
  # Official docker image.
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - datestr=`date '+%Y%m%d'`
    - docker build -t "$CI_REGISTRY_USER/$CI_PROJECT_NAME:latest" -t "$CI_REGISTRY_USER/$CI_PROJECT_NAME:1.2.$datestr" .
    - docker image rm "$CI_REGISTRY_USER/$CI_PROJECT_NAME:test" &> /dev/null || true
    - docker push "$CI_REGISTRY_USER/$CI_PROJECT_NAME" --all-tags
    - docker image rm "$CI_REGISTRY_USER/$CI_PROJECT_NAME:latest"
    - docker image rm "$CI_REGISTRY_USER/$CI_PROJECT_NAME:1.2.$datestr"

  only:
    - master

push to github repo:
  stage: push
  image: debian:stable-20221004-slim
  script:
    - apt update -y && apt install git -y
    - export UPDATE_GIT_URL="git remote set-url public-repo $GITHUB_URL"
    - export ADD_GIT_URL="git remote add public-repo $GITHUB_URL"
    - if [ `git remote | grep public-repo` == "public-repo" ]; then $UPDATE_GIT_URL; else $ADD_GIT_URL; fi
    - git push public-repo HEAD:main
  only:
    - master


test build:
  # Official docker image.
  stage: build
  script:
    - datestr=`date '+%Y%m%d'`
    - docker build -t "$CI_REGISTRY_USER/$CI_PROJECT_NAME:test.$datestr" .
  except:
    - master
